// <auto-generated />
using System;
using FrescuraApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FrescuraApi.Migrations
{
    [DbContext(typeof(FreshContext))]
    [Migration("20241204030103_initialmigration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FrescuraApi.Models.Inventario", b =>
                {
                    b.Property<int>("InventarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventarioID"));

                    b.Property<DateTime>("FechaYHora")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("PedidoID")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoID")
                        .HasColumnType("int");

                    b.Property<int>("SaveStock")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Utilidad")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InventarioID");

                    b.HasIndex("PedidoID");

                    b.HasIndex("ProductoID");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("FrescuraApi.Models.Pago", b =>
                {
                    b.Property<int>("PagoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoID"));

                    b.Property<string>("Detalle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Pagoo")
                        .HasColumnType("bit");

                    b.Property<int>("PedidoID")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TarjetaID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("PagoID");

                    b.HasIndex("PedidoID");

                    b.HasIndex("TarjetaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("FrescuraApi.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Pagoo")
                        .HasColumnType("bit");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("int");

                    b.Property<int>("ProductoID")
                        .HasColumnType("int");

                    b.Property<int>("ProveedorID")
                        .HasColumnType("int");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("PedidoID");

                    b.HasIndex("ProductoID");

                    b.HasIndex("ProveedorID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("FrescuraApi.Models.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoID"));

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Peso")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Precio")
                        .HasMaxLength(100)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductoID");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("FrescuraApi.Models.Proveedores", b =>
                {
                    b.Property<int>("ProveedoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedoreID"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("NombreComercial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ProveedoreID");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("FrescuraApi.Models.Tarjeta", b =>
                {
                    b.Property<int>("TarjetaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TarjetaID"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Cvv")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Expiracion")
                        .HasColumnType("date");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("TarjetaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("FrescuraApi.Models.Telefono", b =>
                {
                    b.Property<int>("TelefonoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TelefonoID"));

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProveedorID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono6")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("TelefonoID");

                    b.HasIndex("ProveedorID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Telefono");
                });

            modelBuilder.Entity("FrescuraApi.Models.Usuarios", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FrescuraApi.Models.Inventario", b =>
                {
                    b.HasOne("FrescuraApi.Models.Pedido", "Pedido")
                        .WithMany("Inventarios")
                        .HasForeignKey("PedidoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FrescuraApi.Models.Producto", "Producto")
                        .WithMany("Inventarios")
                        .HasForeignKey("ProductoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("FrescuraApi.Models.Pago", b =>
                {
                    b.HasOne("FrescuraApi.Models.Pedido", "Pedido")
                        .WithMany("Pagos")
                        .HasForeignKey("PedidoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FrescuraApi.Models.Tarjeta", "Tarjeta")
                        .WithMany("Pagos")
                        .HasForeignKey("TarjetaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FrescuraApi.Models.Usuarios", "Usuarios")
                        .WithMany("Pagos")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Tarjeta");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("FrescuraApi.Models.Pedido", b =>
                {
                    b.HasOne("FrescuraApi.Models.Producto", "Producto")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProductoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FrescuraApi.Models.Proveedores", "Proveedor")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProveedorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FrescuraApi.Models.Usuarios", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FrescuraApi.Models.Tarjeta", b =>
                {
                    b.HasOne("FrescuraApi.Models.Usuarios", "Usuarios")
                        .WithMany("Tarjetas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("FrescuraApi.Models.Telefono", b =>
                {
                    b.HasOne("FrescuraApi.Models.Proveedores", "Proveedor")
                        .WithMany("Telefonos")
                        .HasForeignKey("ProveedorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FrescuraApi.Models.Usuarios", "Usuario")
                        .WithMany("Telefonos")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FrescuraApi.Models.Pedido", b =>
                {
                    b.Navigation("Inventarios");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("FrescuraApi.Models.Producto", b =>
                {
                    b.Navigation("Inventarios");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("FrescuraApi.Models.Proveedores", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("FrescuraApi.Models.Tarjeta", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("FrescuraApi.Models.Usuarios", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("Pedidos");

                    b.Navigation("Tarjetas");

                    b.Navigation("Telefonos");
                });
#pragma warning restore 612, 618
        }
    }
}
